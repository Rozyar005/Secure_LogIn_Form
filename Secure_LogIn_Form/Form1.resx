<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        H//4AA//+AAP//wAD///4B///+Af///wP/8=
</value>
  </data>
</root>